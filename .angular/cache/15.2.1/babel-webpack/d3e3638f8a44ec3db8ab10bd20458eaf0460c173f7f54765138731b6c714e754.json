{"ast":null,"code":"import { catchError, of, tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LivreService {\n  constructor(http) {\n    this.http = http;\n  }\n  getTodoList() {\n    return this.http.get('api/livres').pipe(tap(response => console.table(response)), catchError(error => this.handleError(error, [])));\n  }\n  handleError(error, errorValue) {\n    console.error(error);\n    return of(errorValue);\n  }\n}\nLivreService.ɵfac = function LivreService_Factory(t) {\n  return new (t || LivreService)(i0.ɵɵinject(i1.HttpClient));\n};\nLivreService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LivreService,\n  factory: LivreService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,UAAU,EAAcC,EAAE,EAAEC,GAAG,QAAQ,MAAM;;;AAMtD,OAAM,MAAOC,YAAY;EAEvBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAExCC,WAAWA;IACT,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAU,YAAY,CAAC,CAACC,IAAI,CAC9CN,GAAG,CAAEO,QAAQ,IAAKC,OAAO,CAACC,KAAK,CAACF,QAAQ,CAAC,CAAC,EAC1CT,UAAU,CAAEY,KAAK,IAAK,IAAI,CAACC,WAAW,CAACD,KAAK,EAAE,EAAE,CAAC,CAAC,CACnD;EACH;EACQC,WAAWA,CAACD,KAAY,EAAEE,UAAe;IAC/CJ,OAAO,CAACE,KAAK,CAACA,KAAK,CAAC;IACpB,OAAOX,EAAE,CAACa,UAAU,CAAC;EACvB;;AAbWX,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAY,SAAZZ,YAAY;EAAAa,YAFX;AAAM","names":["catchError","of","tap","LivreService","constructor","http","getTodoList","get","pipe","response","console","table","error","handleError","errorValue","factory","providedIn"],"sourceRoot":"","sources":["/Users/debruynemaxime/Desktop/bibliotech/bibliotech/projects/bibliotech/src/app/livre.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError, Observable, of, tap } from 'rxjs';\nimport { Livre } from './livre';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LivreService {\n\n  constructor(private http: HttpClient) { }\n\n  getTodoList(): Observable<Livre []> {\n    return this.http.get<Livre[]>('api/livres').pipe(\n      tap((response) => console.table(response)),\n      catchError((error) => this.handleError(error, []))\n    )\n  }\n  private handleError(error: Error, errorValue: any) {\n    console.error(error);\n    return of(errorValue);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}